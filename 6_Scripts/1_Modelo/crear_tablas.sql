-- MySQL Script generated by MySQL Workbench
-- Sat Feb  1 21:09:38 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema ferreteria
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema ferreteria
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ferreteria` DEFAULT CHARACTER SET utf8 ;
USE `ferreteria` ;

-- -----------------------------------------------------
-- Table `ferreteria`.`categorias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ferreteria`.`categorias` (
  `id` INT AUTO_INCREMENT NOT NULL COMMENT 'Identificador único de cada categoría en la base de datos. Se genera automáticamente.',
  `nombre` VARCHAR(50) NOT NULL COMMENT 'Nombre de la categoría. Es único y obligatorio. ',
  `descripcion` LONGTEXT NOT NULL COMMENT 'Descripción obligatoria de la categoría. Contiene detalles adicionales sobre los productos o servicios en esta categoría.\n',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `nombre_UNIQUE` (`nombre` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ferreteria`.`personas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ferreteria`.`personas` (
  `id` INT AUTO_INCREMENT  NOT NULL COMMENT 'Identificador único de cada persona en la base de datos. Se genera automáticamente.',
  `nombre` VARCHAR(45) NOT NULL COMMENT 'Nombre de la persona. Campo obligatorio.',
  `apellido_paterno` VARCHAR(45) NOT NULL COMMENT 'Primer apellido de la persona. Campo obligatorio.',
  `apellido_materno` VARCHAR(45) NOT NULL COMMENT 'Segundo apellido de la persona. Campo obligatorio. ',
  `cedula` INT NOT NULL COMMENT 'Número de cédula de identidad de la persona. Es único y obligatorio.',
  `fecha_nacimiento` DATE NOT NULL COMMENT 'Fecha de nacimiento de la persona, en formato YYYY-MM-DD.  Campo opcional.',
  `direccion` MEDIUMTEXT NOT NULL COMMENT 'Dirección de residencia de la persona. Campo opcional.',
  `telefono` INT NOT NULL COMMENT 'Número de teléfono de contacto. Campo opcional.',
  `email` VARCHAR(50) NOT NULL COMMENT 'Correo electrónico de la persona. Campo opcional.',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `cedula_UNIQUE` (`cedula` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ferreteria`.`clientes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ferreteria`.`clientes` (
  `id` INT AUTO_INCREMENT  NOT NULL COMMENT 'Identificador único del cliente en la base de datos. Se genera automáticamente.',
  `id_persona` INT NOT NULL COMMENT 'Identificador único de la persona en la tabla personas. Relaciona a cada cliente con sus datos personales.',
  `fecha_registro` DATE NOT NULL COMMENT 'Fecha en la que el cliente fue registrado en el sistema. Es obligatoria.',
  `id_tipoCliente` INT NOT NULL COMMENT 'Identificador del tipo de cliente, referenciado desde la tabla categorias.',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_persona_UNIQUE` (`id_persona` ASC) VISIBLE,
  INDEX `fk_id_tipoCliente_idx` (`id_tipoCliente` ASC) VISIBLE,
  CONSTRAINT `fk_id_persona_cliente`
    FOREIGN KEY (`id_persona`)
    REFERENCES `ferreteria`.`personas` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_id_tipoCliente`
    FOREIGN KEY (`id_tipoCliente`)
    REFERENCES `ferreteria`.`categorias` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ferreteria`.`ciudades`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ferreteria`.`ciudades` (
  `id` INT AUTO_INCREMENT  NOT NULL COMMENT 'Identificador único de la ciudad en la base de datos. Se genera automáticamente.',
  `nombre` VARCHAR(50) NOT NULL COMMENT 'Nombre de la ciudad en la base de datos. Es unico y obligatorio.',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `nombre_UNIQUE` (`nombre` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ferreteria`.`sucursales`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ferreteria`.`sucursales` (
  `id` INT AUTO_INCREMENT  NOT NULL COMMENT 'Identificador único de la sucursal en la base de datos. Se genera automáticamente.',
  `nombre` VARCHAR(45) NOT NULL COMMENT 'Nombre de la sucursal. Es obligatoria y unica.',
  `telefono` INT NOT NULL COMMENT 'Telefono de la sucursal en funcionamiento',
  `id_ciudad` INT NOT NULL COMMENT 'Referencia a la ciudad relacionada a la tabla ciudades. Es obligatorio.',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `nombre_UNIQUE` (`nombre` ASC) VISIBLE,
  INDEX `fk_id_ciudad_idx` (`id_ciudad` ASC) VISIBLE,
  CONSTRAINT `fk_id_ciudad`
    FOREIGN KEY (`id_ciudad`)
    REFERENCES `ferreteria`.`ciudades` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ferreteria`.`empleados`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ferreteria`.`empleados` (
  `id` INT AUTO_INCREMENT  NOT NULL COMMENT 'Identificador único del empleado en la base de datos. Se genera automáticamente.',
  `id_persona` INT NOT NULL COMMENT 'Identificador único de la persona en la tabla personas. Relaciona a cada empleado con sus datos personales.',
  `id_puesto` INT NOT NULL COMMENT 'Identificador del puesto del empleado, referenciado desde la tabla categorias.',
  `id_departamento` INT NOT NULL COMMENT 'Identificador del departamento donde trabaja el empleado, referenciado desde la tabla categorias.',
  `id_sucursal` INT NOT NULL COMMENT 'Identificador de la sucursal en la que labora el empleado. Relacionado con la tabla sucursales.',
  `fecha_contrato` DATE NOT NULL COMMENT 'Fecha en la que el empleado fue contratado. Es obligatoria.',
  `salario` DECIMAL(10,2) NOT NULL COMMENT 'Salario del empleado con dos decimales para representar centavos.',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_persona_UNIQUE` (`id_persona` ASC) INVISIBLE,
  INDEX `fk_id_puesto_idx` (`id_puesto` ASC) INVISIBLE,
  INDEX `fk_id_departamento_idx` (`id_departamento` ASC) VISIBLE,
  INDEX `fk_id_sucursal_idx` (`id_sucursal` ASC) VISIBLE,
  CONSTRAINT `fk_id_persona_empleado`
    FOREIGN KEY (`id_persona`)
    REFERENCES `ferreteria`.`personas` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_id_puesto`
    FOREIGN KEY (`id_puesto`)
    REFERENCES `ferreteria`.`categorias` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_id_departamento`
    FOREIGN KEY (`id_departamento`)
    REFERENCES `ferreteria`.`categorias` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_id_sucursal_empleado`
    FOREIGN KEY (`id_sucursal`)
    REFERENCES `ferreteria`.`sucursales` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ferreteria`.`marcas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ferreteria`.`marcas` (
  `id` INT AUTO_INCREMENT  NOT NULL COMMENT 'Identificador único de la marca en la base de datos. Se genera automáticamente.',
  `nombre` VARCHAR(50) NOT NULL COMMENT 'Nombre de la marca. Es un campo obligatorio.',
  `pais_origen` VARCHAR(50) NOT NULL COMMENT 'País de origen de la marca. Es obligatorio.',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `nombre_UNIQUE` (`nombre` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ferreteria`.`proveedores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ferreteria`.`proveedores` (
  `id` INT AUTO_INCREMENT  NOT NULL COMMENT 'Identificador único del proveedor en la base de datos. Se genera automáticamente.',
  `nombre` VARCHAR(50) NOT NULL COMMENT 'Nombre del proveedor. Es un campo obligatorio.',
  `direccion` VARCHAR(50) NULL COMMENT 'Dirección física del proveedor. Campo opcional.\n',
  `telefono` INT NOT NULL COMMENT 'Número de teléfono del proveedor.  Es obligatorio.',
  `email` VARCHAR(50) NOT NULL COMMENT 'Correo electrónico de contacto del proveedor. Es obligatorio.',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `nombre_UNIQUE` (`nombre` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ferreteria`.`productos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ferreteria`.`productos` (
  `id` INT AUTO_INCREMENT  NOT NULL COMMENT 'Identificador único del producto en la base de datos. Se genera automáticamente.',
  `nombre` VARCHAR(45) NOT NULL COMMENT 'Nombre del producto. Es un campo obligatorio.',
  `descripcion` LONGTEXT NOT NULL COMMENT 'Descripción detallada del producto. Es obligatoria.',
  `precio` DECIMAL(10,2) NOT NULL COMMENT 'Precio del producto, con dos decimales para precisión. Es un campo obligatorio.',
  `stock` INT NOT NULL COMMENT 'Cantidad disponible en  inventario. Es obligatorio.',
  `id_categoria` INT NOT NULL COMMENT 'Referencia a la categoría del producto en la tabla categorias.',
  `id_marca` INT NOT NULL COMMENT 'Referencia a la marca del producto en la tabla marcas. Es obligatorio',
  `id_proveedor` INT NOT NULL COMMENT 'Referencia al proveedor del producto en la tabla proveedores. Es obligatorio.',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `nombre_UNIQUE` (`nombre` ASC) VISIBLE,
  INDEX `fk_id_categoria_idx` (`id_categoria` ASC) VISIBLE,
  INDEX `fk_id_marca_idx` (`id_marca` ASC) VISIBLE,
  INDEX `fk_id_proveedor_idx` (`id_proveedor` ASC) VISIBLE,
  CONSTRAINT `fk_id_categoria_producto`
    FOREIGN KEY (`id_categoria`)
    REFERENCES `ferreteria`.`categorias` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_id_marca_producto`
    FOREIGN KEY (`id_marca`)
    REFERENCES `ferreteria`.`marcas` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_id_proveedor_producto`
    FOREIGN KEY (`id_proveedor`)
    REFERENCES `ferreteria`.`proveedores` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ferreteria`.`pedidos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ferreteria`.`pedidos` (
  `id` INT AUTO_INCREMENT NOT NULL COMMENT 'Identificador único del pedido en la base de datos. Se genera automáticamente.',
  `fecha_compra` DATE NOT NULL COMMENT 'Fecha en la que se realizó la compra del pedido. Es obligatoria.',
  `fecha_entrega` DATE NOT NULL COMMENT 'Fecha estimada o real en la que el pedido será entregado. Es obligatoria.',
  `codigo_factura` VARCHAR(50) NOT NULL COMMENT 'Número de factura asociado al pedido. Puede almacenar valores alfanuméricos y ser de longitud variable.',
  `total` DECIMAL(10,2) NOT NULL COMMENT 'Monto total del pedido en formato decimal con dos decimales. Es obligatorio.',
  `id_proveedor` INT NOT NULL COMMENT 'Identificador del proveedor que suministra el pedido. Se relaciona con la tabla proveedores.',
  `id_sucursal` INT NOT NULL COMMENT 'Identificador de la sucursal donde se realiza el pedido. Se relaciona con la tabla sucursales.',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `codigo_factura_UNIQUE` (`codigo_factura` ASC) VISIBLE,
  INDEX `fk_id_proveedor_idx` (`id_proveedor` ASC) VISIBLE,
  INDEX `fk_id_sucursal_idx` (`id_sucursal` ASC) VISIBLE,
  CONSTRAINT `fk_id_proveedor_pedido`
    FOREIGN KEY (`id_proveedor`)
    REFERENCES `ferreteria`.`proveedores` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_id_sucursal_pedido`
    FOREIGN KEY (`id_sucursal`)
    REFERENCES `ferreteria`.`sucursales` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ferreteria`.`detalle_pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ferreteria`.`detalle_pedido` (
  `id` INT AUTO_INCREMENT NOT NULL COMMENT 'Identificador único del detalle sobre el pedido en la base de datos. Se genera automáticamente.',
  `id_pedido` INT NOT NULL COMMENT 'Referencia al pedido en la tabla pedidos. Es obligatorio.',
  `id_producto` INT NOT NULL COMMENT 'Referencia al producto en la tabla productos. Es obligatorio.\n',
  `stock` INT NOT NULL COMMENT 'Cantidad de unidades del producto que llegaron en el pedido realizado. Es obligatorio.',
  `precio_unitario` DECIMAL(10,2) NOT NULL COMMENT 'Precio del producto sin ganancia, al precio al que llega al dueño del negocio. Es obligatorio.',
  `precio_total` DECIMAL(10,2) NOT NULL COMMENT 'Precio total por ese producto sin ganancia, este precio es el que llega al dueño del negocio. Es obligatorio.',
  PRIMARY KEY (`id`),
  INDEX `fk_id_pedido_idx` (`id_pedido` ASC) VISIBLE,
  INDEX `fk_id_producto_idx` (`id_producto` ASC) VISIBLE,
  CONSTRAINT `fk_id_pedido_dPedido`
    FOREIGN KEY (`id_pedido`)
    REFERENCES `ferreteria`.`pedidos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_id_producto_dPedido`
    FOREIGN KEY (`id_producto`)
    REFERENCES `ferreteria`.`productos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ferreteria`.`ventas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ferreteria`.`ventas` (
  `id` INT AUTO_INCREMENT NOT NULL COMMENT 'Identificador único de la venta realizada y enviada en la base de datos. Se genera automáticamente.',
  `id_cliente` INT NOT NULL COMMENT 'Referencia al cliente que realiza la compra en la tabla clientes. Es obligatorio.',
  `id_empleado` INT NOT NULL COMMENT 'Referencia al empleado que realiza la venta en la tabla empleados. Es obligatorio.',
  `id_sucursal` INT NOT NULL COMMENT 'Referencia a la sucursal donde se realiza la venta en la tabla sucursales. Es obligatorio.',
  `fecha_venta` DATE NOT NULL COMMENT 'Fecha en la que se realizó la venta. Es obligatorio.',
  `total` DECIMAL(10,2) NOT NULL COMMENT 'Total de la venta, es decir, el monto total de la transacción. Es obligatorio.',
  PRIMARY KEY (`id`),
  INDEX `fk_id_cliente_idx` (`id_cliente` ASC) VISIBLE,
  INDEX `fk_id_empleado_idx` (`id_empleado` ASC) VISIBLE,
  INDEX `fk_id_sucursal_idx` (`id_sucursal` ASC) VISIBLE,
  CONSTRAINT `fk_id_cliente_venta`
    FOREIGN KEY (`id_cliente`)
    REFERENCES `ferreteria`.`clientes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_id_empleado_venta`
    FOREIGN KEY (`id_empleado`)
    REFERENCES `ferreteria`.`empleados` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_id_sucursal_venta`
    FOREIGN KEY (`id_sucursal`)
    REFERENCES `ferreteria`.`sucursales` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ferreteria`.`detalle_venta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ferreteria`.`detalle_venta` (
  `id` INT AUTO_INCREMENT NOT NULL COMMENT 'Identificador único del detalle de la venta realizada y enviada en la base de datos. Se genera automáticamente.',
  `id_venta` INT NOT NULL COMMENT 'Referencia a la venta en la tabla ventas. Es obligatorio.',
  `id_producto` INT NOT NULL COMMENT 'Referencia al producto en la tabla productos. Es obligatorio.',
  `cantidad` INT NOT NULL COMMENT 'Cantidad de unidades del producto en la venta. Es obligatorio.',
  `precio_unitario` DECIMAL(10,2) NOT NULL COMMENT 'Precio unitario del producto en la venta, sin incluir descuentos ni impuestos. Es obligatorio.',
  `precio_total` DECIMAL(10,2) NOT NULL COMMENT 'Precio total de la cantidad de unidades vendidas, calculado como cantidad * precio_unitario. Es obligatorio.',
  PRIMARY KEY (`id`),
  INDEX `fk_id_venta_idx` (`id_venta` ASC) VISIBLE,
  INDEX `fk_id_producto_idx` (`id_producto` ASC) VISIBLE,
  CONSTRAINT `fk_id_venta_dVenta`
    FOREIGN KEY (`id_venta`)
    REFERENCES `ferreteria`.`ventas` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_id_producto_dVenta`
    FOREIGN KEY (`id_producto`)
    REFERENCES `ferreteria`.`productos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ferreteria`.`devoluciones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ferreteria`.`devoluciones` (
  `id` INT AUTO_INCREMENT NOT NULL COMMENT 'Identificador único de la devolucion en la base de datos. Se genera automáticamente.',
  `id_venta` INT NOT NULL COMMENT 'Referencia a la venta relacionada en la tabla ventas. Es obligatorio.',
  `id_producto` INT NOT NULL COMMENT 'Referencia al producto relacionado en la tabla productos. Es obligatorio',
  `fecha_devolucion` DATE NOT NULL COMMENT 'Fecha en la que se realiza la devolución. Es obligatorio.',
  `motivo` LONGTEXT NOT NULL COMMENT 'Motivo de la devolución. Este campo es obligatorio para detallar la razón de la devolución.',
  PRIMARY KEY (`id`),
  INDEX `fk_id_venta_idx` (`id_venta` ASC) VISIBLE,
  INDEX `fk_id_producto_idx` (`id_producto` ASC) VISIBLE,
  CONSTRAINT `fk_id_venta_devolucion`
    FOREIGN KEY (`id_venta`)
    REFERENCES `ferreteria`.`ventas` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_id_producto_devolucion`
    FOREIGN KEY (`id_producto`)
    REFERENCES `ferreteria`.`productos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ferreteria`.`usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ferreteria`.`usuarios` (
  `id` INT AUTO_INCREMENT NOT NULL COMMENT 'Identificador único del usuario en la base de datos. Se genera automáticamente.',
  `nameUser` VARCHAR(45) NOT NULL COMMENT 'usuario registrado en la base de datos para el ingreso del sistema. Campo obligatorio.',
  `password` VARCHAR(45) NOT NULL COMMENT 'Contraseña del usuario registrado en la base de datos. Campo obligatorio y unico.',
  `id_empleado` INT NOT NULL COMMENT 'Identificador del empleado con acceso al sistema registrado en la base de datos. Campo obligatorio y unico.',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `nameUser_UNIQUE` (`nameUser` ASC) VISIBLE,
  UNIQUE INDEX `password_UNIQUE` (`password` ASC) VISIBLE,
  UNIQUE INDEX `id_empleado_UNIQUE` (`id_empleado` ASC) VISIBLE,
  CONSTRAINT `fk_id_empleado_usuario`
    FOREIGN KEY (`id_empleado`)
    REFERENCES `ferreteria`.`empleados` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- VERIFICACION DE LA BASE DE DATOS

USE FERRETERIA;
SHOW TABLES;
/* ventas
categorias
ciudades
clientes
detalle_pedido
detalle_venta
devoluciones
empleados
marcas
pedidos
personas
productos
proveedores
sucursales
usuarios 
*/